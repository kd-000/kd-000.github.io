{"ast":null,"code":"var _jsxFileName = \"/home/kd/kd-000/kd-000.github.io/src/components/tag.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport '../css/index.css';\nimport { setSelectionRange } from '@testing-library/user-event/dist/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tag({\n  type\n}) {\n  _s();\n  const [name, setName] = useState('Visual Basic');\n  const [className, setClassName] = useState('tag-vb');\n  switch (type) {\n    case 'vb':\n      setName(\"Visual Basic\");\n      setClassName(\"tag-vb\");\n      break;\n    case 'react':\n      setName(\"React\");\n      setClassName(\"tag-react\");\n      break;\n    case 'option3':\n      // Do something for option 3\n      break;\n    default:\n      // Do something if value doesn't match any case\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: className,\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Tag, \"fxHhHWeNf0MceEcJic2gD5UfrjI=\");\n_c = Tag;\nexport default Tag;\nvar _c;\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"names":["useState","setSelectionRange","jsxDEV","_jsxDEV","Tag","type","_s","name","setName","className","setClassName","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kd/kd-000/kd-000.github.io/src/components/tag.js"],"sourcesContent":["import {useState} from 'react';\nimport '../css/index.css';\nimport { setSelectionRange } from '@testing-library/user-event/dist/utils';\n\n\nfunction Tag({type}) {\n    const [name, setName] = useState('Visual Basic');\n    const [className, setClassName] = useState('tag-vb');\n\n    switch (type) {\n        case 'vb':\n            setName(\"Visual Basic\")\n            setClassName(\"tag-vb\")\n          break;\n        case 'react':\n            setName(\"React\")\n            setClassName(\"tag-react\")\n          break;\n        case 'option3':\n          // Do something for option 3\n          break;\n        default:\n          // Do something if value doesn't match any case\n          break;\n      }\n      \n\n  return (\n    <span className={className}>{name}</span>\n  );\n}\n\nexport default Tag;"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAO,kBAAkB;AACzB,SAASC,iBAAiB,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3E,SAASC,GAAGA,CAAC;EAACC;AAAI,CAAC,EAAE;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,cAAc,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,QAAQ,CAAC;EAEpD,QAAQK,IAAI;IACR,KAAK,IAAI;MACLG,OAAO,CAAC,cAAc,CAAC;MACvBE,YAAY,CAAC,QAAQ,CAAC;MACxB;IACF,KAAK,OAAO;MACRF,OAAO,CAAC,OAAO,CAAC;MAChBE,YAAY,CAAC,WAAW,CAAC;MAC3B;IACF,KAAK,SAAS;MACZ;MACA;IACF;MACE;MACA;EACJ;EAGJ,oBACEP,OAAA;IAAMM,SAAS,EAAEA,SAAU;IAAAE,QAAA,EAAEJ;EAAI;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAE7C;AAACT,EAAA,CAzBQF,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}