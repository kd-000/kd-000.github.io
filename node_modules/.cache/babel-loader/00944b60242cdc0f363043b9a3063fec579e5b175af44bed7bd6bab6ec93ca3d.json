{"ast":null,"code":"var _jsxFileName = \"/home/kd/kd-000/kd-000.github.io/src/components/tag.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../css/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tag(type) {\n  _s();\n  const [name, setName] = useState('Visual Basic');\n  const [className, setClassName] = useState('tag-vb');\n  useEffect(() => {\n    switch (type) {\n      case 'vb':\n        setName(\"Visual Basic\");\n        setClassName(\"tag-vb\");\n        break;\n      case 'react':\n        setName(\"React\");\n        setClassName(\"tag-react\");\n        break;\n      case 'option3':\n        // Do something for option 3\n        break;\n      default:\n        // Do something if value doesn't match any case\n        break;\n    }\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: className,\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Tag, \"55+zkY4Tu/AayB6n1z7c9DEM3dg=\");\n_c = Tag;\nexport default Tag;\nvar _c;\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Tag","type","_s","name","setName","className","setClassName","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kd/kd-000/kd-000.github.io/src/components/tag.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport '../css/index.css';\n\n\nfunction Tag(type) {\n    const [name, setName] = useState('Visual Basic');\n    const [className, setClassName] = useState('tag-vb');\n\n    useEffect(() => {\n        switch (type) {\n            case 'vb':\n                setName(\"Visual Basic\")\n                setClassName(\"tag-vb\")\n              break;\n            case 'react':\n                setName(\"React\")\n                setClassName(\"tag-react\")\n              break;\n            case 'option3':\n              // Do something for option 3\n              break;\n            default:\n              // Do something if value doesn't match any case\n              break;\n          }\n    }, {})\n\n      \n\n  return (\n    <span className={className}>{name}</span>\n  );\n}\n\nexport default Tag;"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,SAASC,GAAGA,CAACC,IAAI,EAAE;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,cAAc,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,QAAQ,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,QAAQI,IAAI;MACR,KAAK,IAAI;QACLG,OAAO,CAAC,cAAc,CAAC;QACvBE,YAAY,CAAC,QAAQ,CAAC;QACxB;MACF,KAAK,OAAO;QACRF,OAAO,CAAC,OAAO,CAAC;QAChBE,YAAY,CAAC,WAAW,CAAC;QAC3B;MACF,KAAK,SAAS;QACZ;QACA;MACF;QACE;QACA;IACJ;EACN,CAAC,EAAE,CAAC,CAAC,CAAC;EAIR,oBACEP,OAAA;IAAMM,SAAS,EAAEA,SAAU;IAAAE,QAAA,EAAEJ;EAAI;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAE7C;AAACT,EAAA,CA5BQF,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}